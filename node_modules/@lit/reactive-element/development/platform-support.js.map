{"version":3,"file":"platform-support.js","sourceRoot":"","sources":["../src/platform-support.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * ReactiveElement patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill, but\n * support for Shadow DOM like css scoping is opt-in. This module uses ShadyCSS\n * to scope styles defined via the `static styles` property.\n *\n * @packageDocumentation\n */\n\nconst needsPlatformSupport = !!(\n  window.ShadyCSS !== undefined &&\n  (!window.ShadyCSS.nativeShadow || window.ShadyCSS.ApplyShim)\n);\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\nconst SCOPED = '__scoped';\n\ntype CSSResults = Array<{cssText: string} | CSSStyleSheet>;\n\ninterface PatchableReactiveElementConstructor {\n  [SCOPED]: boolean;\n  elementStyles: CSSResults;\n  shadowRootOptions: ShadowRootInit;\n  _$handlesPrepareStyles?: boolean;\n}\n\ninterface PatchableReactiveElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableReactiveElement;\n  constructor: PatchableReactiveElementConstructor;\n  connectedCallback(): void;\n  hasUpdated: boolean;\n  _$didUpdate(changedProperties: unknown): void;\n  createRenderRoot(): Element | ShadowRoot;\n  _$renderOptions: RenderOptions;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(globalThis as any)['reactiveElementPlatformSupport'] ??= ({\n  ReactiveElement,\n}: {\n  ReactiveElement: PatchableReactiveElement;\n}) => {\n  if (!needsPlatformSupport) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making ReactiveElement compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  const elementProto = ReactiveElement.prototype;\n\n  /**\n   * Patch to apply adoptedStyleSheets via ShadyCSS\n   */\n  const createRenderRoot = elementProto.createRenderRoot;\n  elementProto.createRenderRoot = function (this: PatchableReactiveElement) {\n    // Pass the scope to render options so that it gets to lit-html for proper\n    // scoping via ShadyCSS.\n    const name = this.localName;\n    // If using native Shadow DOM must adoptStyles normally,\n    // otherwise do nothing.\n    if (window.ShadyCSS!.nativeShadow) {\n      return createRenderRoot.call(this);\n    } else {\n      if (!this.constructor.hasOwnProperty(SCOPED)) {\n        (this.constructor as PatchableReactiveElementConstructor)[\n          SCOPED\n        ] = true;\n        // Use ShadyCSS's `prepareAdoptedCssText` to shim adoptedStyleSheets.\n        const css = (this\n          .constructor as PatchableReactiveElementConstructor).elementStyles.map(\n          (v) =>\n            v instanceof CSSStyleSheet\n              ? Array.from(v.cssRules).reduce(\n                  (a: string, r: CSSRule) => (a += r.cssText),\n                  ''\n                )\n              : v.cssText\n        );\n        window.ShadyCSS?.ScopingShim?.prepareAdoptedCssText(css, name);\n        if (this.constructor._$handlesPrepareStyles === undefined) {\n          window.ShadyCSS!.prepareTemplateStyles(\n            document.createElement('template'),\n            name\n          );\n        }\n      }\n      return (\n        this.shadowRoot ??\n        this.attachShadow(\n          (this.constructor as PatchableReactiveElementConstructor)\n            .shadowRootOptions\n        )\n      );\n    }\n  };\n\n  /**\n   * Patch connectedCallback to apply ShadyCSS custom properties shimming.\n   */\n  const connectedCallback = elementProto.connectedCallback;\n  elementProto.connectedCallback = function (this: PatchableReactiveElement) {\n    connectedCallback.call(this);\n    // Note, must do first update separately so that we're ensured\n    // that rendering has completed before calling this.\n    if (this.hasUpdated) {\n      window.ShadyCSS!.styleElement(this);\n    }\n  };\n\n  /**\n   * Patch update to apply ShadyCSS custom properties shimming for first\n   * update.\n   */\n  const didUpdate = elementProto._$didUpdate;\n  elementProto._$didUpdate = function (\n    this: PatchableReactiveElement,\n    changedProperties: unknown\n  ) {\n    const isFirstUpdate = !this.hasUpdated;\n    didUpdate.call(this, changedProperties);\n    // Note, must do first update here so rendering has completed before\n    // calling this and styles are correct by updated/firstUpdated.\n    if (isFirstUpdate) {\n      window.ShadyCSS!.styleElement(this);\n    }\n  };\n};\n"]}