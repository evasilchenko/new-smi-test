!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";
/**
     * @license
     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
     * This code may only be used under the BSD style license found at
     * http://polymer.github.io/LICENSE.txt
     * The complete set of authors may be found at
     * http://polymer.github.io/AUTHORS.txt
     * The complete set of contributors may be found at
     * http://polymer.github.io/CONTRIBUTORS.txt
     * Code distributed by Google as part of the polymer project is also
     * subject to an additional IP rights grant found at
     * http://polymer.github.io/PATENTS.txt
     */var t;const i=!(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow&&!window.ShadyCSS.ApplyShim),n="__scoped";(t=globalThis).reactiveElementPlatformSupport??(t.reactiveElementPlatformSupport=({ReactiveElement:t})=>{if(!i)return;const o=t.prototype,s=o.createRenderRoot;o.createRenderRoot=function(){const t=this.localName;if(window.ShadyCSS.nativeShadow)return s.call(this);if(!this.constructor.hasOwnProperty(n)){this.constructor[n]=!0;const i=this.constructor.elementStyles.map((t=>t instanceof CSSStyleSheet?Array.from(t.cssRules).reduce(((t,i)=>t+i.cssText),""):t.cssText));window.ShadyCSS?.ScopingShim?.prepareAdoptedCssText(i,t),void 0===this.constructor.N&&window.ShadyCSS.prepareTemplateStyles(document.createElement("template"),t)}return this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions)};const e=o.connectedCallback;o.connectedCallback=function(){e.call(this),this.hasUpdated&&window.ShadyCSS.styleElement(this)};const c=o.H;o.H=function(t){const i=!this.hasUpdated;c.call(this,t),i&&window.ShadyCSS.styleElement(this)}})}));
//# sourceMappingURL=platform-support.js.map
