{"version":3,"file":"my-element.js","sourceRoot":"","sources":["../../src/demo/my-element.ts"],"names":[],"mappings":";AAAA,wEAAwE;AACxE,yDAAyD;AACzD,6EAA6E;AAC7E,OAAO,EAAC,UAAU,EAAC,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAC,IAAI,EAAC,MAAM,UAAU,CAAC;AAC9B,OAAO,EAAC,GAAG,EAAiB,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAC,QAAQ,EAAC,MAAM,2BAA2B,CAAC;AAEnD,MAAM,cAAe,SAAQ,UAAU;IAOrC,MAAM;QACJ,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,SAAS,UAAU,CAAC;IACzC,CAAC;;AARM,qBAAM,GAAG,GAAG,CAAA;;;;GAIlB,CAAC;AAOJ,cAAc,CAAC,MAAM,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;AAEzD,MAAM,SAAU,SAAQ,UAAU;IAkBhC;QACE,KAAK,EAAE,CAAC;QAjBV,QAAG,GAAG,KAAK,CAAC;QAEZ,QAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhB,WAAM,GAAG,CAAC,CAAC;QAcT,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;YACxC,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,MAAM,IAAI,CAAC,cAAc,CAAC;YAC1B,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAC,MAAM,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,EAAC,CAAC,CAC3D,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAC,WAAW,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAkCD,MAAM;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAA;gBACC,IAAI,CAAC,SAAS;yBACL,CAAC,CAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;2BACvC,IAAI,CAAC,GAAG,UAAU,IAAI,CAAC,GAAG;;;;;;;;;uCASd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;KAC1D,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,YAA4B;QAClC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,YAA4B;QACvC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;;AAxDM,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BlB,CAAC;AA1DF;IADC,QAAQ,EAAE;sCACC;AAEZ;IADC,QAAQ,EAAE;sCACK;AAEhB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;yCACd;AAEX;IADC,QAAQ,EAAE;sCACE;AAQb;IAPC,QAAQ,CAAC;QACR,SAAS,EAAE;YACT,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,CAAC,KAAa,EAAE,EAAE,CAAC,KAAK,GAAG,OAAO;SAChD;QACD,OAAO,EAAE,IAAI;KACd,CAAC;yCACc;AAyElB,cAAc,CAAC,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC","sourcesContent":["// TODO(sorvell): rollup problem: it's trying to import all of this from\n// @lit/reactive-element, but importing separately works.\n// import { LitElement, html, css, PropertyValues } from '../lit-element.js';\nimport {LitElement} from '../lit-element.js';\nimport {html} from 'lit-html';\nimport {css, PropertyValues} from '@lit/reactive-element';\nimport {property} from '../decorators/property.js';\n\nclass AnotherElement extends LitElement {\n  static styles = css`\n    :host {\n      color: #03dac6;\n    }\n  `;\n\n  render() {\n    return html`${this.localName} says hi`;\n  }\n}\n\ncustomElements.define('another-element', AnotherElement);\n\nclass MyElement extends LitElement {\n  @property()\n  foo = 'foo';\n  @property()\n  nug = [1, 2, 3];\n  @property({type: Number})\n  whales = 0;\n  @property()\n  bar!: number;\n  @property({\n    converter: {\n      fromAttribute: parseInt,\n      toAttribute: (value: string) => value + '-attr',\n    },\n    reflect: true,\n  })\n  fooBar?: string;\n\n  constructor() {\n    super();\n    this.addEventListener('click', async () => {\n      this.whales++;\n      await this.updateComplete;\n      this.dispatchEvent(\n        new CustomEvent('whales', {detail: {whales: this.whales}})\n      );\n      console.log(this.shadowRoot!.querySelector('.count')!.textContent);\n    });\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      font-family: sans-serif;\n      background: #000051;\n      color: white;\n      padding: 16px;\n      margin: 8px;\n      border: 4px solid #03dac6;\n      border-radius: 4px;\n    }\n\n    .count {\n      color: #03dac6;\n    }\n\n    .content {\n      border: 1px solid #03dac6;\n      border-radius: 4px;\n      padding: 8px;\n    }\n\n    header {\n      font-size: 2rem;\n    }\n\n    section {\n      margin: 16px;\n      font-size: 1.2rem;\n    }\n  `;\n\n  render() {\n    this.whales = Math.max(1, this.whales % 8);\n    return html`\n      <header>${this.localName}</header>\n      <section @click=\"${(e: Event) => console.log(this, e.target)}\">\n        Properties: foo: ${this.foo}, bar: ${this.bar}\n      </section>\n      <section class=\"content\">\n        <slot></slot>\n      </section>\n      <section>\n        Composed element:\n        <another-element></another-element>\n      </section>\n      <section class=\"count\">Whales: ${'üê≥'.repeat(this.whales)}</section>\n    `;\n  }\n\n  updated(changedProps: PropertyValues) {\n    console.log('updated!', changedProps);\n  }\n\n  firstUpdated(changedProps: PropertyValues) {\n    console.log('firstUpdated!', changedProps);\n  }\n}\n\ncustomElements.define('my-element', MyElement);\n"]}