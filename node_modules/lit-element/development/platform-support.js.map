{"version":3,"file":"platform-support.js","sourceRoot":"","sources":["../src/platform-support.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AACH;;;;;;;;;;;;;;;;GAgBG;;AAEH,OAAO,2CAA2C,CAAC;AACnD,OAAO,8BAA8B,CAAC;AAEtC,MAAM,oBAAoB,GAAG,CAAC,CAAC,CAC7B,MAAM,CAAC,QAAQ,KAAK,SAAS;IAC7B,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC7D,CAAC;AAmBF,8DAA8D;AAC9D,MAAC,UAAkB,EAAC,2BAA2B,SAA3B,2BAA2B,IAAM,CAAC,EACpD,UAAU,GAGX,EAAE,EAAE;IACH,IAAI,CAAC,oBAAoB,EAAE;QACzB,OAAO;KACR;IAED,eAAe;IACf,0DAA0D;IAC1D,4CAA4C;IAC5C,KAAK;IAEH,UAAyD,CAAC,sBAAsB,GAAG,IAAI,CAAC;IAE1F;;OAEG;IACH,MAAM,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC;IAC7C,MAAM,gBAAgB,GAAG,eAAe,CAAC,gBAAgB,CAAC;IAC1D,eAAe,CAAC,gBAAgB,GAAG;QACjC,0EAA0E;QAC1E,wEAAwE;QACxE,iBAAiB;QACjB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5C,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC;AACJ,CAAC,EAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * LitElement patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill, but\n * support for Shadow DOM like css scoping is opt-in. This module uses ShadyCSS\n * to scope styles defined via the `static styles` property and styles included\n * in the render method. There are some limitations to be aware of:\n * * only styles that are included in the first render of a component are scoped.\n * * In addition, support for the deprecated `@apply` feature of ShadyCSS is\n * only provided for styles included in the template and not styles provided\n * via the static styles property.\n * * Lit parts cannot be used in styles included in the template.\n *\n * @packageDocumentation\n */\n\nimport '@lit/reactive-element/platform-support.js';\nimport 'lit-html/platform-support.js';\n\nconst needsPlatformSupport = !!(\n  window.ShadyCSS !== undefined &&\n  (!window.ShadyCSS.nativeShadow || window.ShadyCSS.ApplyShim)\n);\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\ninterface PatchableLitElementConstructor {\n  _$handlesPrepareStyles?: boolean;\n}\n\ninterface PatchableLitElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableLitElement;\n  constructor: PatchableLitElementConstructor;\n  createRenderRoot(): Element | ShadowRoot;\n  _$renderOptions: RenderOptions;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(globalThis as any)['litElementPlatformSupport'] ??= ({\n  LitElement,\n}: {\n  LitElement: PatchableLitElement;\n}) => {\n  if (!needsPlatformSupport) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making LitElement compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  ((LitElement as unknown) as PatchableLitElementConstructor)._$handlesPrepareStyles = true;\n\n  /**\n   * Patch to apply adoptedStyleSheets via ShadyCSS\n   */\n  const litElementProto = LitElement.prototype;\n  const createRenderRoot = litElementProto.createRenderRoot;\n  litElementProto.createRenderRoot = function (this: PatchableLitElement) {\n    // Pass the scope to render options so that it gets to lit-html for proper\n    // scoping via ShadyCSS. This is needed under Shady and also Shadow DOM,\n    // due to @apply.\n    this._$renderOptions.scope = this.localName;\n    return createRenderRoot.call(this);\n  };\n};\n"]}