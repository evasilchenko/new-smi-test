import{_$private as o}from"./lit-html.js";
/**
 * @license
 * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const{ut:t}=o,i=o=>null===o||"object"!=typeof o&&"function"!=typeof o,n={HTML:1,SVG:2},e=(o,t)=>void 0===t?void 0!==o?._$litType$:o?._$litType$===t,c=(o,t)=>void 0===t?void 0!==o?._$litDirective$:o?._$litDirective$===t,d=o=>void 0===o.strings,s=()=>document.createComment(""),f=(o,i,n)=>{const e=o.D.parentNode,c=void 0===i?o.E:i.D;if(void 0===n){const i=e.insertBefore(s(),c),d=e.insertBefore(s(),c);n=new t(i,d,o,o.options)}else{const o=n.E.nextSibling;if(o!==c){let t=n.D;for(;t!==o;){const o=t.nextSibling;e.insertBefore(t,c),t=o}}}return n},l=(o,t,i=o)=>(o.M(t,i),o),r={},v=(o,t=r)=>o.L=t,m=o=>o.L,p=o=>{o.S?.(!1,!0);let t=o.D;const i=o.E.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},u=o=>{o.T()};export{n as TemplateResultType,u as clearPart,m as getComittedValue,f as insertPart,c as isDirectiveResult,i as isPrimitive,d as isSingleExpression,e as isTemplateResult,p as removePart,l as setChildPartValue,v as setComittedValue};
//# sourceMappingURL=directive-helpers.js.map
