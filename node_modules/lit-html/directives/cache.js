import{render as t,nothing as i}from"../lit-html.js";import{directive as s,Directive as e}from"../directive.js";import{isTemplateResult as o,getComittedValue as r,setComittedValue as h,insertPart as n,clearPart as c}from"../directive-helpers.js";
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const d=s(class extends e{constructor(t){super(t),this.templateCache=new WeakMap}render(t){return[t]}update(s,[e]){if(o(this.value)&&(!o(e)||this.value.strings!==e.strings)){const e=r(s).pop();let o=this.templateCache.get(this.value.strings);if(void 0===o){const s=document.createDocumentFragment();o=t(i,s),this.templateCache.set(this.value.strings,o)}h(o,[e]),n(o,void 0,e)}if(!o(e)||o(this.value)&&this.value.strings===e.strings)this.value=void 0;else{const t=this.templateCache.get(e.strings);if(void 0!==t){const i=r(t).pop();c(s),n(s,void 0,i),h(s,[i])}this.value=e}return this.render(e)}});export{d as cache};
//# sourceMappingURL=cache.js.map
