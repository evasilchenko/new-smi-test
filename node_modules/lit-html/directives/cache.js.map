{"version":3,"file":"cache.js","sources":["../src/directives/cache.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult, ChildPart, render, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n} from '../directive.js';\nimport {\n  clearPart,\n  getComittedValue,\n  insertPart,\n  isTemplateResult,\n  setComittedValue,\n} from '../directive-helpers.js';\n\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive(\n  class extends Directive {\n    templateCache = new WeakMap<TemplateStringsArray, ChildPart>();\n    value?: TemplateResult;\n\n    constructor(partInfo: PartInfo) {\n      super(partInfo);\n    }\n\n    render(v: unknown) {\n      // Return an array of the value to induce lit-html to create a ChildPart\n      // for the value that we can move into the cache.\n      return [v];\n    }\n\n    update(containerPart: ChildPart, [v]: DirectiveParameters<this>) {\n      // If the previous value is a TemplateResult and the new value is not,\n      // or is a different Template as the previous value, move the child part\n      // into the cache.\n      if (\n        isTemplateResult(this.value) &&\n        (!isTemplateResult(v) || this.value.strings !== v.strings)\n      ) {\n        // This is always an array because we return [v] in render()\n        const partValue = getComittedValue(containerPart) as Array<ChildPart>;\n        const childPart = partValue.pop()!;\n        let cachedContainerPart = this.templateCache.get(this.value.strings);\n        if (cachedContainerPart === undefined) {\n          const fragment = document.createDocumentFragment();\n          cachedContainerPart = render(nothing, fragment);\n          this.templateCache.set(this.value.strings, cachedContainerPart);\n        }\n        // Move into cache\n        setComittedValue(cachedContainerPart, [childPart]);\n        insertPart(cachedContainerPart, undefined, childPart);\n      }\n      // If the new value is a TemplateResult and the previous value is not,\n      // or is a different Template as the previous value, restore the child\n      // part from the cache.\n      if (\n        isTemplateResult(v) &&\n        (!isTemplateResult(this.value) || this.value.strings !== v.strings)\n      ) {\n        const cachedContainerPart = this.templateCache.get(v.strings);\n        if (cachedContainerPart !== undefined) {\n          // Move the cached part back into the container part value\n          const partValue = getComittedValue(\n            cachedContainerPart\n          ) as Array<ChildPart>;\n          const cachedPart = partValue.pop()!;\n          // Move cached part back into DOM\n          clearPart(containerPart);\n          insertPart(containerPart, undefined, cachedPart);\n          setComittedValue(containerPart, [cachedPart]);\n        }\n        this.value = v;\n      } else {\n        this.value = undefined;\n      }\n      return this.render(v);\n    }\n  }\n);\n"],"names":["cache","directive","Directive","[object Object]","partInfo","super","this","WeakMap","v","containerPart","isTemplateResult","value","strings","childPart","getComittedValue","pop","cachedContainerPart","templateCache","get","undefined","fragment","document","createDocumentFragment","render","nothing","set","setComittedValue","insertPart","cachedPart","clearPart"],"mappings":";;;;;;;;;;;;;SA2CaA,EAAQC,EACnB,cAAcC,EAIZC,YAAYC,GACVC,MAAMD,GAJRE,mBAAgB,IAAIC,QAOpBJ,OAAOK,GAGL,MAAO,CAACA,GAGVL,OAAOM,GAA2BD,IAIhC,GACEE,EAAiBJ,KAAKK,UACpBD,EAAiBF,IAAMF,KAAKK,MAAMC,UAAYJ,EAAEI,SAClD,CAEA,MACMC,EADYC,EAAiBL,GACPM,MAC5B,IAAIC,EAAsBV,KAAKW,cAAcC,IAAIZ,KAAKK,MAAMC,SAC5D,QAA4BO,IAAxBH,EAAmC,CACrC,MAAMI,EAAWC,SAASC,yBAC1BN,EAAsBO,EAAOC,EAASJ,GACtCd,KAAKW,cAAcQ,IAAInB,KAAKK,MAAMC,QAASI,GAG7CU,EAAiBV,EAAqB,CAACH,IACvCc,EAAWX,OAAqBG,EAAWN,GAK7C,IACEH,EAAiBF,IACfE,EAAiBJ,KAAKK,QAAUL,KAAKK,MAAMC,UAAYJ,EAAEI,QAgB3DN,KAAKK,WAAQQ,MAfb,CACA,MAAMH,EAAsBV,KAAKW,cAAcC,IAAIV,EAAEI,SACrD,QAA4BO,IAAxBH,EAAmC,CAErC,MAGMY,EAHYd,EAChBE,GAE2BD,MAE7Bc,EAAUpB,GACVkB,EAAWlB,OAAeU,EAAWS,GACrCF,EAAiBjB,EAAe,CAACmB,IAEnCtB,KAAKK,MAAQH,EAIf,OAAOF,KAAKiB,OAAOf"}