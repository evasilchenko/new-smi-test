import{nothing as t}from"../lit-html.js";import{directive as i}from"../directive.js";import{DisconnectableDirective as s}from"../disconnectable-directive.js";
/**
 * @license
 * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const e=()=>new o;class o{}const h=new WeakMap,n=i(class extends s{render(i){return t}update(i,[s]){const e=s!==this.gt;return e&&void 0!==this.gt&&this.xt(void 0),(e||this.Tt!==this.Et)&&(this.gt=s,this.xt(this.Et=i.element)),t}xt(t){"function"==typeof this.gt?(void 0!==h.get(this.gt)&&this.gt(void 0),h.set(this.gt,t),void 0!==t&&this.gt(t)):this.gt.value=t}get Tt(){return"function"==typeof this.gt?h.get(this.gt):this.gt?.value}disconnectedCallback(){this.Tt===this.Et&&this.xt(void 0)}reconnectedCallback(){this.xt(this.Et)}});export{e as createRef,n as ref};
//# sourceMappingURL=ref.js.map
