import{noChange as e,_$private as r}from"./lit-html.js";import{PartType as t}from"./directive.js";import{isPrimitive as n,isTemplateResult as o,isSingleExpression as i}from"./directive-helpers.js";
/**
 * @license
 * Copyright (c) 2019 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const{lt:l,ct:a,dt:s,ut:c,vt:p,wt:f}=r,d=(e,r,t={})=>{if(void 0!==r.t)throw Error("container already contains a live render");let n,o;const i=[],l=document.createTreeWalker(r,NodeFilter.SHOW_COMMENT,null,!1);let a;for(;null!==(a=l.nextNode());){const r=a.data;if(r.startsWith("lit-part")){if(0===i.length&&void 0!==n)throw Error("there must be only one root part per container");o=h(e,a,i,t),n??(n=o)}else if(r.startsWith("lit-bindings"))u(a,i,t);else if(r.startsWith("/lit-part")){if(1===i.length&&o!==n)throw Error("internal error");o=m(a,o,i)}}console.assert(void 0!==n,"there should be exactly one root part in a render container"),r.t=n},h=(r,t,i,p)=>{let f,d;if(0===i.length)d=new c(t,null,void 0,p),f=r;else{const e=i[i.length-1];if("template-instance"===e.type)d=new c(t,null,e.instance,p),e.instance.o.push(d),f=e.result.values[e.instancePartIndex++],e.templatePartIndex++;else if("iterable"===e.type){d=new c(t,null,e.part,p);const r=e.iterator.next();if(r.done)throw f=void 0,e.done=!0,Error("Unhandled shorter than expected iterable");f=r.value,e.part.L.push(d)}else d=new c(t,null,e.part,p)}if(f=s(d,f),f===e)i.push({part:d,type:"leaf"});else if(n(f))i.push({part:d,type:"leaf"}),d.L=f;else if(o(f)){const e="lit-part "+w(f);if(t.data!==e)throw Error("Hydration value mismatch: Unexpected TemplateResult rendered to part");{const e=c.prototype.F(f.strings,f),r=new l(e,d);i.push({type:"template-instance",instance:r,part:d,templatePartIndex:0,instancePartIndex:0,result:f}),d.L=r}}else a(f)?(i.push({part:d,type:"iterable",value:f,iterator:f[Symbol.iterator](),done:!1}),d.L=[]):(i.push({part:d,type:"leaf"}),d.L=null==f?"":f);return d},m=(e,r,t)=>{if(void 0===r)throw Error("unbalanced part marker");r.E=e;const n=t.pop();if("iterable"===n.type&&!n.iterator.next().done)throw Error("unexpected longer than expected iterable");if(t.length>0)return t[t.length-1].part},u=(e,r,n)=>{const o=/lit-bindings (\d+)/.exec(e.data),l=parseInt(o[1]),a=r[r.length-1];if("template-instance"!==a.type)throw Error("internal error");{const r=a.instance;let o=!1;for(;;){const s=r.G.o[a.templatePartIndex];if(void 0===s||s.h!==t.ATTRIBUTE||s.l!==l)break;o=!0;const c=new s.p(e.parentElement,s.u,s.v,a.instance,n),d=i(c)?a.result.values[a.instancePartIndex]:a.result.values,h=!(c instanceof p||c instanceof f);c.M(d,c,a.instancePartIndex,h),a.templatePartIndex++,a.instancePartIndex+=s.v.length-1,r.o.push(c)}if(!o)throw Error("internal error")}},w=e=>{const r=new Uint32Array(2).fill(5381);for(const t of e.strings)for(let e=0;e<t.length;e++)r[e%2]=33*r[e%2]^t.charCodeAt(e);return btoa(String.fromCharCode(...new Uint8Array(r.buffer)))};export{w as digestForTemplateResult,d as hydrate};
//# sourceMappingURL=hydrate.js.map
